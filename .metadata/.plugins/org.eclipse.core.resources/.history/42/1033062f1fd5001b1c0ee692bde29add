package br.com.monkey.bo;

import java.util.Arrays;

public class MainTest
{
	//static final int MAX = 100;
    
    static int getAmountBananas(int mat[][],
                              int m, int n)
    {
         
        // Create a table for storing
        // intermediate results and initialize
        // all cells to 0. The first row of
        // goldMineTable gives the maximum
        // gold that the miner can collect
        // when starts that row
        int goldTable[][] = new int[m][n];
         
        for(int i=0; i < goldTable.length; i++) {
        	for( int j=0; j < goldTable[0].length; j++ ) {
        		mat[i][j] = 0;
        	}
        }
        
        //Fiz uma iteração reversa para preencher da ultima coluna para a primeira
        for (int col = n-1; col >= 0; col--)
        {
            for (int row = 0; row < m; row++)
            {
                int next 	 = 0;
                int nextDown = 0;
                int nextUp   = 0;
                
                int limitColumns = n-1;
                int limitRows = m-1;
                
                if( col != limitColumns ) {
                	next = goldTable[row][col+1];
                }
                
                if( row != limitRows && col != limitColumns) {
                	nextDown = goldTable[row+1][col+1];
                }
                
                if( row != 0 && col != limitColumns) {
                	nextUp = goldTable[row-1][col+1];
                }
                
                System.out.println(">>>>>>>>>>>>>>>>> BEGIN <<<<<<<<<<<<<<<<<");
                
                System.out.println("Linha: "+row+" | Coluna: "+col);
                System.out.println("nextDown: "+nextDown);
                System.out.println("nextUp: "+nextUp);
                System.out.println("next: "+next);
                
                System.out.println(">>>>>>>>>>>>>>>>> END <<<<<<<<<<<<<<<<<");
                
                // Max gold collected from taking
                // either of the above 3 paths
                goldTable[row][col] = mat[row][col]
                 + Math.max(next, Math.max(nextUp,
                                       nextDown));
                IslandBO.showMatrix(goldTable);
            }
        }
     
        // The max amount of gold collected will be
        // the max value in first column of all rows
        int res = goldTable[0][0];
         
        for (int i = 1; i < m; i++)
            res = Math.max(res, goldTable[i][0]);
             
        return res;
    }
     
    //driver code
    public static void main(String arg[])
    {
        int mat[][]= { {22, 25, 13, 15},
                        {15, 21, 4, 1},
                        {5, 0, 2, 3},
                        {23, 6, 14, 2} };
               
        int m = mat.length; 
        int n = mat[0].length;
         
        System.out.print(getAmountBananas(mat, m, n));
    }

}